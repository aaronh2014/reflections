What happens when you initialize a repository? Why do you need to do it?
git intitializes an empty git repository by creating a .git folder.  How
else would git know what to track?

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area is used to build a commit.  Working directory contains work that you may
not want to commit.  Repository contains everything that you've committed.  The
staging area is useful to transition work in progress to a final version.

How can you use the staging area to make sure you have one commit per logical
change?
Staging area allows you to keep move one logical unit at a time from working directory
to repository.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches seem useful for allowing you to work on more than 1 thing at a time;
for instance, if you are working on the next version while maintaining the current version,
porting to another language or platform,
or attempting multiple solutions,
or adding new features,
or working on a different piece of the project.
Mike Wales adds a new branch whenever he moves on to something different; context-switching.
Production branch, experimental branch, new features

How do the diagrams help you visualize the branch structure?
The diagram maps temporal and logical connections into a spatial relation;
you can easily see the order of changes as well as the logical relationships
between changes.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
